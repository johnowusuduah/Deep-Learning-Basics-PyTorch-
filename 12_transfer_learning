# NOTE
# In this example we are using the pretrained ResNet18CNN (network trained on more than a million images from the image net database
# It is 18 layers deep and can classify images into 1,000 object categories). In our example we have only two classes. i.e bees and ants

# ImageFolder ---> Datasets ImageFolder - used when we want to use images in a folder located on the hard drive
# Transfer Learning

# import dependencies
import torch
import torch.nn as nn
import torch.optim as optim
from torch.optim import lr_scheduler
import numpy as np
import torchvision
from torchvision import datasets, models, transforms
import matplotlib.pyplot as plt
import time
import os
import copy

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")

mean = np.array([0.485, 0.456, 0.406])
std = np.array([0.229, 0.224, 0.225])

# transformations
data_transforms = {"train": transforms.Compose([transforms.RandomResizedCrop(
    224), transforms.RandomHorizontalFlip(), transforms.ToTensor(), transforms.Normalize(mean, std)])}

# import data
data_dir = "./data/hymenoptera_data"
sets = ["train", "val"]
# imports images from the path specified
image_datasets = {x: datasets.ImageFolder(os.path.join(
    data_dir, x), data_transforms[x]) for x in ["train", "val"]}

dataset_sizes = {x: len(image_datasets[x]) for x in ["train", "val"]}
class_names = image_datasets["train"].classes
